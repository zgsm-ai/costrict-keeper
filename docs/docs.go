// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/costrict/api/v1/components": {
            "get": {
                "description": "获取所有已安装组件信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Components"
                ],
                "summary": "获取组件列表",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ComponentInfo"
                            }
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/components/{name}": {
            "delete": {
                "description": "根据组件名删除指定组件",
                "tags": [
                    "Components"
                ],
                "summary": "删除组件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "组件名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/components/{name}/upgrade": {
            "post": {
                "description": "升级指定组件到最新版本",
                "tags": [
                    "Components"
                ],
                "summary": "升级组件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "组件名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"code\": \"component.not_found\", \"message\": \"Component not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/reload": {
            "post": {
                "description": "重新加载应用配置文件",
                "tags": [
                    "Config"
                ],
                "summary": "重新加载配置",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/services": {
            "get": {
                "description": "获取当前管理的所有服务信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "获取服务列表",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceSpecification"
                            }
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/services/{name}": {
            "get": {
                "description": "根据服务名获取指定服务的详细信息",
                "tags": [
                    "Services"
                ],
                "summary": "获取服务信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "服务名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceSpecification"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/services/{name}/restart": {
            "post": {
                "description": "根据服务名重启指定服务",
                "tags": [
                    "Services"
                ],
                "summary": "重启服务",
                "parameters": [
                    {
                        "type": "string",
                        "description": "服务名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/services/{name}/start": {
            "post": {
                "description": "根据服务名启动指定服务",
                "tags": [
                    "Services"
                ],
                "summary": "启动服务",
                "parameters": [
                    {
                        "type": "string",
                        "description": "服务名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/services/{name}/stop": {
            "post": {
                "description": "根据服务名停止指定服务",
                "tags": [
                    "Services"
                ],
                "summary": "停止服务",
                "parameters": [
                    {
                        "type": "string",
                        "description": "服务名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/tunnels": {
            "get": {
                "description": "Get list of all active tunnels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tunnels"
                ],
                "summary": "List all tunnels",
                "responses": {
                    "200": {
                        "description": "Tunnel list response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tunnel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create reverse tunnel for specified application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tunnels"
                ],
                "summary": "Create reverse tunnel",
                "parameters": [
                    {
                        "description": "Create tunnel request parameters",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTunnelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tunnel  creation",
                        "schema": {
                            "$ref": "#/definitions/models.Tunnel"
                        }
                    },
                    "400": {
                        "description": "Invalid parameter error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Tunnel creation failure error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/costrict/api/v1/tunnels/{app}/{port}": {
            "get": {
                "description": "Get details of specified tunnel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tunnels"
                ],
                "summary": "Get tunnel info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Port number",
                        "name": "port",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tunnel details response",
                        "schema": {
                            "$ref": "#/definitions/models.Tunnel"
                        }
                    },
                    "404": {
                        "description": "Tunnel not found error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Close reverse tunnel for specified application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tunnels"
                ],
                "summary": "Close reverse tunnel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Port number",
                        "name": "port",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tunnel close success response",
                        "schema": {
                            "$ref": "#/definitions/models.TunnelResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameter error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Tunnel close failure error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ComponentInfo": {
            "type": "object",
            "properties": {
                "installed": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.CreateTunnelRequest": {
            "type": "object",
            "properties": {
                "app": {
                    "description": "application name(path parameter)",
                    "type": "string"
                },
                "port": {
                    "description": "port number(query parameter)",
                    "type": "integer"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.ServiceSpecification": {
            "type": "object",
            "properties": {
                "accessible": {
                    "type": "string"
                },
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "type": "string"
                },
                "healthy": {
                    "type": "string"
                },
                "metrics": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "startup": {
                    "type": "string"
                }
            }
        },
        "models.Tunnel": {
            "type": "object",
            "properties": {
                "createdTime": {
                    "description": "creation time",
                    "type": "string"
                },
                "localPort": {
                    "description": "local port",
                    "type": "integer"
                },
                "mappingPort": {
                    "description": "mapping port to cloud",
                    "type": "integer"
                },
                "name": {
                    "description": "service name",
                    "type": "string"
                },
                "pid": {
                    "description": "process ID of the tunnel",
                    "type": "integer"
                },
                "protocol": {
                    "description": "protocol type(http/https)",
                    "type": "string"
                },
                "status": {
                    "description": "tunnel status(running/stopped/error)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.TunnelStatus"
                        }
                    ]
                },
                "temporary": {
                    "description": "delete after the tunnel stops",
                    "type": "boolean"
                }
            }
        },
        "models.TunnelResponse": {
            "type": "object",
            "properties": {
                "appName": {
                    "description": "application name",
                    "type": "string"
                },
                "message": {
                    "description": "response message",
                    "type": "string"
                },
                "status": {
                    "description": "operation status",
                    "type": "string"
                }
            }
        },
        "models.TunnelStatus": {
            "type": "string",
            "enum": [
                "running",
                "stopped",
                "error"
            ],
            "x-enum-varnames": [
                "StatusRunning",
                "StatusStopped",
                "StatusError"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8999",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Costrict Keeper API",
	Description:      "This is the API server for Costrict Keeper",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
